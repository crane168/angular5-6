import { ContentChild, Directive, ElementRef, Inject, Input, NgModule } from '@angular/core';
import { DOCUMENT } from '@angular/common';
import { FormsModule, NgModel } from '@angular/forms';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class HighlightJsDirective {
    /**
     * @param {?} el
     * @param {?} doc
     */
    constructor(el, doc) {
        this.el = el;
        this.doc = doc;
    }
    /**
     * @param {?} str
     * @return {?}
     */
    escapeHTML(str) {
        return (str || '')
            .replace(/&/g, '&amp;')
            .replace(/</g, '&lt;')
            .replace(/>/g, '&gt;')
            .replace(/"/g, '&quot;')
            .replace(/'/g, '&apos;');
    }
    /**
     * @return {?}
     */
    init() {
        this.destroy();
        this.codeEl = this.doc.createElement('pre');
        if (this.lang) {
            this.codeEl.className = this.lang;
        }
        this.codeEl.innerHTML =
            this.code || '' + this.el.nativeElement.innerHTML.trim();
        this.parentEl = this.el.nativeElement.parentNode;
        this.parentEl.insertBefore(this.codeEl, this.el.nativeElement.nextSibling);
        hljs.configure(Object.assign({}, this.options));
        hljs.highlightBlock(this.codeEl);
    }
    /**
     * @return {?}
     */
    destroy() {
        if (this.codeEl) {
            this.parentEl.removeChild(this.codeEl);
            this.codeEl = null;
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.init();
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        if (this.ngModel) {
            this.ngModel.valueChanges.subscribe(res => {
                this.code = this.escapeHTML(res);
                this.init();
            });
        }
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.destroy();
    }
}
HighlightJsDirective.decorators = [
    { type: Directive, args: [{
                selector: '[highlight-js]',
                host: {
                    style: 'display:none;',
                },
            },] },
];
/** @nocollapse */
HighlightJsDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }
];
HighlightJsDirective.propDecorators = {
    options: [{ type: Input }],
    lang: [{ type: Input }],
    code: [{ type: Input }],
    ngModel: [{ type: ContentChild, args: [NgModel,] }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class HighlightJsModule {
}
HighlightJsModule.decorators = [
    { type: NgModule, args: [{
                imports: [FormsModule],
                declarations: [HighlightJsDirective],
                exports: [HighlightJsDirective]
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */

export { HighlightJsDirective, HighlightJsModule };
//# sourceMappingURL=highlightjs.js.map
